{
  "C:\\Users\\HP\\order-processing-system\\serverless.yml": {
    "versionFramework": "4.10.1",
    "servicePath": "C:\\Users\\HP\\order-processing-system\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "order-processing-service",
      "provider": {
        "name": "aws",
        "runtime": "python3.8",
        "region": "us-east-1",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CreateOrderLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/order-processing-service-dev-createOrder"
              }
            },
            "ProcessPaymentLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/order-processing-service-dev-processPayment"
              }
            },
            "ShipOrderLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/order-processing-service-dev-shipOrder"
              }
            },
            "SendNotificationLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/order-processing-service-dev-sendNotification"
              }
            },
            "TriggerOrderProcessingLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/order-processing-service-dev-triggerOrderProcessing"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "order-processing-service",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/order-processing-service-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/order-processing-service-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "order-processing-service",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateOrderLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                  "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
                },
                "Handler": "handler.createOrder",
                "Runtime": "python3.8",
                "FunctionName": "order-processing-service-dev-createOrder",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateOrderLogGroup"
              ]
            },
            "ProcessPaymentLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                  "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
                },
                "Handler": "handler.processPayment",
                "Runtime": "python3.8",
                "FunctionName": "order-processing-service-dev-processPayment",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProcessPaymentLogGroup"
              ]
            },
            "ShipOrderLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                  "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
                },
                "Handler": "handler.shipOrder",
                "Runtime": "python3.8",
                "FunctionName": "order-processing-service-dev-shipOrder",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ShipOrderLogGroup"
              ]
            },
            "SendNotificationLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                  "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
                },
                "Handler": "handler.sendNotification",
                "Runtime": "python3.8",
                "FunctionName": "order-processing-service-dev-sendNotification",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SendNotificationLogGroup"
              ]
            },
            "TriggerOrderProcessingLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                  "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
                },
                "Handler": "handler.triggerOrderProcessing",
                "Runtime": "python3.8",
                "FunctionName": "order-processing-service-dev-triggerOrderProcessing",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "TriggerOrderProcessingLogGroup"
              ]
            },
            "CreateOrderLambdaVersionJQjmgWN3Unu7t6aZcG90hvmmdDvlMm3dU982oUJ5xh4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateOrderLambdaFunction"
                },
                "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
              }
            },
            "ProcessPaymentLambdaVersioncqt6uGahpxOcyR53QFoQRtWQdxVnCVwbZri5uQhZw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProcessPaymentLambdaFunction"
                },
                "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
              }
            },
            "ShipOrderLambdaVersionbTtuuuWDVLkFymhsOC0kjnOQHbJFqOoKm3nn4stDwew": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ShipOrderLambdaFunction"
                },
                "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
              }
            },
            "SendNotificationLambdaVersionbfE9oMOxIrkvysXel14u988PBSmbo3BUXvHrpaI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SendNotificationLambdaFunction"
                },
                "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
              }
            },
            "TriggerOrderProcessingLambdaVersioniYx0mHk0Wnc9uYaLTyo1DNBHVeFw5LOENnOxV97NNU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "TriggerOrderProcessingLambdaFunction"
                },
                "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
              }
            },
            "StateMachine": {
              "Type": "AWS::StepFunctions::StateMachine",
              "Properties": {
                "StateMachineName": "OrderProcessingStateMachine",
                "RoleArn": "arn:aws:iam::718361999916:role/MyStepFunctionsRole",
                "DefinitionString": {
                  "Fn::Sub": "{\n  \"Comment\": \"Order Processing Workflow\",\n  \"StartAt\": \"CreateOrder\",\n  \"States\": {\n    \"CreateOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${CreateOrderLambdaFunction.Arn}\",\n      \"Next\": \"ProcessPayment\"\n    },\n    \"ProcessPayment\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ProcessPaymentLambdaFunction.Arn}\",\n      \"Next\": \"ShipOrder\"\n    },\n    \"ShipOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ShipOrderLambdaFunction.Arn}\",\n      \"Next\": \"SendNotification\"\n    },\n    \"SendNotification\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${SendNotificationLambdaFunction.Arn}\",\n      \"End\": true\n    }\n  }\n}\n"
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
              "Export": {
                "Name": "sls-order-processing-service-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateOrderLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateOrderLambdaVersionJQjmgWN3Unu7t6aZcG90hvmmdDvlMm3dU982oUJ5xh4"
              },
              "Export": {
                "Name": "sls-order-processing-service-dev-CreateOrderLambdaFunctionQualifiedArn"
              }
            },
            "ProcessPaymentLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProcessPaymentLambdaVersioncqt6uGahpxOcyR53QFoQRtWQdxVnCVwbZri5uQhZw"
              },
              "Export": {
                "Name": "sls-order-processing-service-dev-ProcessPaymentLambdaFunctionQualifiedArn"
              }
            },
            "ShipOrderLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ShipOrderLambdaVersionbTtuuuWDVLkFymhsOC0kjnOQHbJFqOoKm3nn4stDwew"
              },
              "Export": {
                "Name": "sls-order-processing-service-dev-ShipOrderLambdaFunctionQualifiedArn"
              }
            },
            "SendNotificationLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SendNotificationLambdaVersionbfE9oMOxIrkvysXel14u988PBSmbo3BUXvHrpaI"
              },
              "Export": {
                "Name": "sls-order-processing-service-dev-SendNotificationLambdaFunctionQualifiedArn"
              }
            },
            "TriggerOrderProcessingLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "TriggerOrderProcessingLambdaVersioniYx0mHk0Wnc9uYaLTyo1DNBHVeFw5LOENnOxV97NNU"
              },
              "Export": {
                "Name": "sls-order-processing-service-dev-TriggerOrderProcessingLambdaFunctionQualifiedArn"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createOrder": {
          "handler": "handler.createOrder",
          "events": [],
          "name": "order-processing-service-dev-createOrder",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "CreateOrderLambdaVersionJQjmgWN3Unu7t6aZcG90hvmmdDvlMm3dU982oUJ5xh4"
        },
        "processPayment": {
          "handler": "handler.processPayment",
          "events": [],
          "name": "order-processing-service-dev-processPayment",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ProcessPaymentLambdaVersioncqt6uGahpxOcyR53QFoQRtWQdxVnCVwbZri5uQhZw"
        },
        "shipOrder": {
          "handler": "handler.shipOrder",
          "events": [],
          "name": "order-processing-service-dev-shipOrder",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ShipOrderLambdaVersionbTtuuuWDVLkFymhsOC0kjnOQHbJFqOoKm3nn4stDwew"
        },
        "sendNotification": {
          "handler": "handler.sendNotification",
          "events": [],
          "name": "order-processing-service-dev-sendNotification",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "SendNotificationLambdaVersionbfE9oMOxIrkvysXel14u988PBSmbo3BUXvHrpaI"
        },
        "triggerOrderProcessing": {
          "handler": "handler.triggerOrderProcessing",
          "events": [],
          "name": "order-processing-service-dev-triggerOrderProcessing",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "TriggerOrderProcessingLambdaVersioniYx0mHk0Wnc9uYaLTyo1DNBHVeFw5LOENnOxV97NNU"
        }
      },
      "resources": {
        "Resources": {
          "StateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "StateMachineName": "OrderProcessingStateMachine",
              "RoleArn": "arn:aws:iam::718361999916:role/MyStepFunctionsRole",
              "DefinitionString": {
                "Fn::Sub": "{\n  \"Comment\": \"Order Processing Workflow\",\n  \"StartAt\": \"CreateOrder\",\n  \"States\": {\n    \"CreateOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${CreateOrderLambdaFunction.Arn}\",\n      \"Next\": \"ProcessPayment\"\n    },\n    \"ProcessPayment\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ProcessPaymentLambdaFunction.Arn}\",\n      \"Next\": \"ShipOrder\"\n    },\n    \"ShipOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ShipOrderLambdaFunction.Arn}\",\n      \"Next\": \"SendNotification\"\n    },\n    \"SendNotification\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${SendNotificationLambdaFunction.Arn}\",\n      \"End\": true\n    }\n  }\n}\n"
              }
            }
          }
        },
        "Outputs": {}
      },
      "outputs": {
        "CreateOrderLambdaArn": {
          "Value": {
            "Fn::GetAtt": [
              "CreateOrderLambdaFunction",
              "Arn"
            ]
          },
          "Export": {
            "Name": "CreateOrderLambdaArn"
          }
        },
        "ProcessPaymentLambdaArn": {
          "Value": {
            "Fn::GetAtt": [
              "ProcessPaymentLambdaFunction",
              "Arn"
            ]
          },
          "Export": {
            "Name": "ProcessPaymentLambdaArn"
          }
        },
        "ShipOrderLambdaArn": {
          "Value": {
            "Fn::GetAtt": [
              "ShipOrderLambdaFunction",
              "Arn"
            ]
          },
          "Export": {
            "Name": "ShipOrderLambdaArn"
          }
        },
        "SendNotificationLambdaArn": {
          "Value": {
            "Fn::GetAtt": [
              "SendNotificationLambdaFunction",
              "Arn"
            ]
          },
          "Export": {
            "Name": "SendNotificationLambdaArn"
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "region": "us-east-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/order-processing-service-dev-createOrder"
            }
          },
          "ProcessPaymentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/order-processing-service-dev-processPayment"
            }
          },
          "ShipOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/order-processing-service-dev-shipOrder"
            }
          },
          "SendNotificationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/order-processing-service-dev-sendNotification"
            }
          },
          "TriggerOrderProcessingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/order-processing-service-dev-triggerOrderProcessing"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "order-processing-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/order-processing-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/order-processing-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "order-processing-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
              },
              "Handler": "handler.createOrder",
              "Runtime": "python3.8",
              "FunctionName": "order-processing-service-dev-createOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateOrderLogGroup"
            ]
          },
          "ProcessPaymentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
              },
              "Handler": "handler.processPayment",
              "Runtime": "python3.8",
              "FunctionName": "order-processing-service-dev-processPayment",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ProcessPaymentLogGroup"
            ]
          },
          "ShipOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
              },
              "Handler": "handler.shipOrder",
              "Runtime": "python3.8",
              "FunctionName": "order-processing-service-dev-shipOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ShipOrderLogGroup"
            ]
          },
          "SendNotificationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
              },
              "Handler": "handler.sendNotification",
              "Runtime": "python3.8",
              "FunctionName": "order-processing-service-dev-sendNotification",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SendNotificationLogGroup"
            ]
          },
          "TriggerOrderProcessingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
                "S3Key": "serverless/order-processing-service/dev/1743548688978-2025-04-01T23:04:48.978Z/order-processing-service.zip"
              },
              "Handler": "handler.triggerOrderProcessing",
              "Runtime": "python3.8",
              "FunctionName": "order-processing-service-dev-triggerOrderProcessing",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TriggerOrderProcessingLogGroup"
            ]
          },
          "CreateOrderLambdaVersionJQjmgWN3Unu7t6aZcG90hvmmdDvlMm3dU982oUJ5xh4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateOrderLambdaFunction"
              },
              "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
            }
          },
          "ProcessPaymentLambdaVersioncqt6uGahpxOcyR53QFoQRtWQdxVnCVwbZri5uQhZw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProcessPaymentLambdaFunction"
              },
              "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
            }
          },
          "ShipOrderLambdaVersionbTtuuuWDVLkFymhsOC0kjnOQHbJFqOoKm3nn4stDwew": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ShipOrderLambdaFunction"
              },
              "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
            }
          },
          "SendNotificationLambdaVersionbfE9oMOxIrkvysXel14u988PBSmbo3BUXvHrpaI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendNotificationLambdaFunction"
              },
              "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
            }
          },
          "TriggerOrderProcessingLambdaVersioniYx0mHk0Wnc9uYaLTyo1DNBHVeFw5LOENnOxV97NNU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TriggerOrderProcessingLambdaFunction"
              },
              "CodeSha256": "Ax8kQncIm8g2VnnPJtFflAT+WfUmhnDTZ9MGpoF2cxY="
            }
          },
          "StateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "StateMachineName": "OrderProcessingStateMachine",
              "RoleArn": "arn:aws:iam::718361999916:role/MyStepFunctionsRole",
              "DefinitionString": {
                "Fn::Sub": "{\n  \"Comment\": \"Order Processing Workflow\",\n  \"StartAt\": \"CreateOrder\",\n  \"States\": {\n    \"CreateOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${CreateOrderLambdaFunction.Arn}\",\n      \"Next\": \"ProcessPayment\"\n    },\n    \"ProcessPayment\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ProcessPaymentLambdaFunction.Arn}\",\n      \"Next\": \"ShipOrder\"\n    },\n    \"ShipOrder\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${ShipOrderLambdaFunction.Arn}\",\n      \"Next\": \"SendNotification\"\n    },\n    \"SendNotification\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${SendNotificationLambdaFunction.Arn}\",\n      \"End\": true\n    }\n  }\n}\n"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-3de87e23-2d08",
            "Export": {
              "Name": "sls-order-processing-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateOrderLambdaVersionJQjmgWN3Unu7t6aZcG90hvmmdDvlMm3dU982oUJ5xh4"
            },
            "Export": {
              "Name": "sls-order-processing-service-dev-CreateOrderLambdaFunctionQualifiedArn"
            }
          },
          "ProcessPaymentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProcessPaymentLambdaVersioncqt6uGahpxOcyR53QFoQRtWQdxVnCVwbZri5uQhZw"
            },
            "Export": {
              "Name": "sls-order-processing-service-dev-ProcessPaymentLambdaFunctionQualifiedArn"
            }
          },
          "ShipOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ShipOrderLambdaVersionbTtuuuWDVLkFymhsOC0kjnOQHbJFqOoKm3nn4stDwew"
            },
            "Export": {
              "Name": "sls-order-processing-service-dev-ShipOrderLambdaFunctionQualifiedArn"
            }
          },
          "SendNotificationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendNotificationLambdaVersionbfE9oMOxIrkvysXel14u988PBSmbo3BUXvHrpaI"
            },
            "Export": {
              "Name": "sls-order-processing-service-dev-SendNotificationLambdaFunctionQualifiedArn"
            }
          },
          "TriggerOrderProcessingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TriggerOrderProcessingLambdaVersioniYx0mHk0Wnc9uYaLTyo1DNBHVeFw5LOENnOxV97NNU"
            },
            "Export": {
              "Name": "sls-order-processing-service-dev-TriggerOrderProcessingLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "An error occurred: StateMachine - Resource handler returned message: \"State machine already exists (Service: null, Status Code: 0, Request ID: null)\" (RequestToken: 8cae5c66-630e-a53d-9ba1-671ce83a7492, HandlerErrorCode: AlreadyExists).",
      "stack": "ServerlessError2: An error occurred: StateMachine - Resource handler returned message: \"State machine already exists (Service: null, Status Code: 0, Request ID: null)\" (RequestToken: 8cae5c66-630e-a53d-9ba1-671ce83a7492, HandlerErrorCode: AlreadyExists).\n    at file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:573:828\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AwsDeploy.createFallback (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:573:23465)\n    at async aws:deploy:deploy:updateStack (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:584:7906)\n    at async PluginManager.runHooks (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:9546)\n    at async PluginManager.invoke (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:10315)\n    at async PluginManager.spawn (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:10674)\n    at async PluginManager.runHooks (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:9546)\n    at async PluginManager.invoke (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:10315)\n    at async PluginManager.run (file:///C:/Users/HP/.serverless/releases/4.10.1/package/dist/sf-core.js:775:11044)",
      "code": "AWS_CLOUD_FORMATION_CREATE_STACK_INTERNAL_STEP_FUNCTIONS_STATE_MACHINE_CREATE_FAILED"
    },
    "serviceRawFile": "service: order-processing-service # This is the name of your service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.8\r\n  region: us-east-1\r\n\r\nfunctions:\r\n  createOrder:\r\n    handler: handler.createOrder\r\n  processPayment:\r\n    handler: handler.processPayment\r\n  shipOrder:\r\n    handler: handler.shipOrder\r\n  sendNotification:\r\n    handler: handler.sendNotification\r\n  triggerOrderProcessing:\r\n    handler: handler.triggerOrderProcessing\r\n\r\nresources:\r\n  Resources:\r\n    StateMachine:\r\n      Type: AWS::StepFunctions::StateMachine\r\n      Properties:\r\n        StateMachineName: OrderProcessingStateMachine\r\n        RoleArn: arn:aws:iam::718361999916:role/MyStepFunctionsRole\r\n        DefinitionString: !Sub |\r\n          {\r\n            \"Comment\": \"Order Processing Workflow\",\r\n            \"StartAt\": \"CreateOrder\",\r\n            \"States\": {\r\n              \"CreateOrder\": {\r\n                \"Type\": \"Task\",\r\n                \"Resource\": \"${CreateOrderLambdaFunction.Arn}\",\r\n                \"Next\": \"ProcessPayment\"\r\n              },\r\n              \"ProcessPayment\": {\r\n                \"Type\": \"Task\",\r\n                \"Resource\": \"${ProcessPaymentLambdaFunction.Arn}\",\r\n                \"Next\": \"ShipOrder\"\r\n              },\r\n              \"ShipOrder\": {\r\n                \"Type\": \"Task\",\r\n                \"Resource\": \"${ShipOrderLambdaFunction.Arn}\",\r\n                \"Next\": \"SendNotification\"\r\n              },\r\n              \"SendNotification\": {\r\n                \"Type\": \"Task\",\r\n                \"Resource\": \"${SendNotificationLambdaFunction.Arn}\",\r\n                \"End\": true\r\n              }\r\n            }\r\n          }\r\n\r\noutputs:\r\n  CreateOrderLambdaArn:\r\n    Value: !GetAtt CreateOrderLambdaFunction.Arn\r\n    Export:\r\n      Name: CreateOrderLambdaArn\r\n  ProcessPaymentLambdaArn:\r\n    Value: !GetAtt ProcessPaymentLambdaFunction.Arn\r\n    Export:\r\n      Name: ProcessPaymentLambdaArn\r\n  ShipOrderLambdaArn:\r\n    Value: !GetAtt ShipOrderLambdaFunction.Arn\r\n    Export:\r\n      Name: ShipOrderLambdaArn\r\n  SendNotificationLambdaArn:\r\n    Value: !GetAtt SendNotificationLambdaFunction.Arn\r\n    Export:\r\n      Name: SendNotificationLambdaArn\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "c39e1b3f-9247-4b5c-a234-73f3bded8449",
    "orgName": "moupriyapersonal",
    "userId": "Gqrrf63HrT7qYk5PVs",
    "userName": "moupriyapersonal",
    "serviceProviderAwsAccountId": "718361999916",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}